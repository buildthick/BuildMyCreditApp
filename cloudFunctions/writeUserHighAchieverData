// This function copies the data from credit_high_achievers_taragets
// and writes userRef to user_high_achiever_targets

const functions = require('firebase-functions');
const admin = require('firebase-admin');
// To avoid deployment errors, do not call admin.initializeApp() in your code

exports.writeUserHighAchieverData = functions.region('us-central1').https.onCall(
  async (data, context) => {
    if (!context.auth || !context.auth.uid) {
      throw new functions.https.HttpsError('unauthenticated', 'Must be signed in.');
    }
    const uid = context.auth.uid;
    const db = admin.firestore();

    // 1) Load all static high-achiever targets
    const staticSnap = await db
      .collection('credit_high_achievers_targets')
      .get();
    if (staticSnap.empty) {
      throw new functions.https.HttpsError('not-found',
        'No documents found in credit_high_achievers_targets');
    }

    // 2) Batch-write into the root-level user_high_achiever_targets collection,
    //    preserving all fields and adding userRef as a DocumentReference
    const batch = db.batch();
    const userRef = db.doc(`users/${uid}`);  
    staticSnap.docs.forEach(doc => {
      const staticData = doc.data();
      const userDocRef = db
        .collection('user_high_achiever_targets')
        .doc(doc.id);

      batch.set(userDocRef, {
        ...staticData,   // copies Target_Value, Unique_Name, blank Current_Value, etc.
        userRef
      }, { merge: true });
    });

    await batch.commit();
    return { success: true, copied: staticSnap.size };
  }
);
